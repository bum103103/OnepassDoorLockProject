#include <Keypad.h>
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
#include <Adafruit_PN532.h>

// LCD 설정
LiquidCrystal_I2C lcd(0x27, 16, 2);

// NFC 설정
#define IRQ_PIN 11
#define RESET_PIN 12
Adafruit_PN532 nfc(IRQ_PIN, RESET_PIN);
uint8_t keyA[6] = {0xD3, 0xF7, 0xD3, 0xF7, 0xD3, 0xF7};
bool nfcAvailable = false;  // NFC 사용 가능 여부 플래그

// NFC 체크 타이밍 제어를 위한 변수
unsigned long lastNFCCheck = 0;
const unsigned long NFC_CHECK_INTERVAL = 100; // 100ms 간격으로 NFC 체크

// 키패드 설정
const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
byte rowPins[ROWS] = {9, 8, 7, 6};
byte colPins[COLS] = {5, 4, 3, 2};
Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

String masterPassword = "1234";
String tempPasswords[10];
int tempPasswordCount = 0;
String inputPassword = "";
const int LED_PIN = 13;

void setup() {
  Serial.begin(9600);
  pinMode(LED_PIN, OUTPUT);
  
  // LCD 초기화
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Initializing...");
  
  // NFC 초기화 시도
  nfc.begin();
  if (nfc.getFirmwareVersion()) {
    nfcAvailable = true;
    nfc.SAMConfig();
    lcd.setCursor(0, 1);
    lcd.print("NFC Ready");
  } else {
    lcd.setCursor(0, 1);
    lcd.print("No NFC Module");
  }
  
  delay(1000);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Ready...");
  
  Serial.println("System ready!");
}

void checkNFCPassword() {
  if (!nfcAvailable) return;  // NFC 모듈이 없으면 건너뜀
  
  // 현재 시간이 마지막 체크 시간으로부터 일정 간격이 지났는지 확인
  if (millis() - lastNFCCheck < NFC_CHECK_INTERVAL) {
    return;
  }
  lastNFCCheck = millis();
  
  uint8_t uid[] = { 0, 0, 0, 0, 0, 0, 0 };
  uint8_t uidLength;
  
  // non-blocking 방식으로 NFC 카드 감지 (50ms timeout)
  if (nfc.readPassiveTargetID(PN532_MIFARE_ISO14443A, uid, &uidLength, 50)) {
    uint8_t data[16];
    String nfcData = "";
    
    if (nfc.mifareclassic_AuthenticateBlock(uid, uidLength, 4, 0, keyA)) {
      if (nfc.mifareclassic_ReadDataBlock(4, data)) {
        // NFC 데이터에서 숫자만 추출
        for (int i = 0; i < 16; i++) {
          if (data[i] >= '0' && data[i] <= '9') {
            nfcData += (char)data[i];
          }
        }
        
        // 6자리 숫자인 경우에만 서버로 전송
        if (nfcData.length() == 6) {
          Serial.println("NFC_PASSWORD:" + nfcData);
          
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("Reading NFC...");
          lcd.setCursor(0, 1);
          lcd.print("Wait...");
          delay(500); // 딜레이 시간 단축
        }
      }
    }
  }
}

void handleKeypadPassword(String password) {
  bool accessGranted = false;
  String usedPassword = "";
  
  if (password == masterPassword) {
    accessGranted = true;
  } else {
    for (int i = 0; i < tempPasswordCount; i++) {
      if (password == tempPasswords[i]) {
        accessGranted = true;
        usedPassword = tempPasswords[i];
        
        // 사용된 임시 비밀번호 제거
        for (int j = i; j < tempPasswordCount - 1; j++) {
          tempPasswords[j] = tempPasswords[j + 1];
        }
        tempPasswordCount--;

        Serial.println("PASSWORD_USED:" + usedPassword);
        break;
      }
    }
  }

  lcd.clear();
  lcd.setCursor(0, 0);
  if (accessGranted) {
    lcd.print("Access Granted!");
    lcd.setCursor(0, 1);
    lcd.print("Via Keypad");
    blinkLED(2);
  } else {
    lcd.print("Access Denied!");
    Serial.println("ACCESS_DENIED:" + password);
    blinkLED(1);
  }
  delay(1000); // 딜레이 시간 단축
  
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Ready...");
}

void handleSerialCommands() {
  if (Serial.available() > 0) {
    String received = Serial.readStringUntil('\n');
    received.trim();
    
    if (received.startsWith("SET_PASSWORD:")) {
      String newPassword = received.substring(13);
      if (newPassword.length() == 6) {
        bool alreadyExists = false;
        for (int i = 0; i < tempPasswordCount; i++) {
          if (tempPasswords[i] == newPassword) {
            alreadyExists = true;
            break;
          }
        }
        
        if (!alreadyExists && tempPasswordCount < 10) {
          tempPasswords[tempPasswordCount] = newPassword;
          tempPasswordCount++;
          Serial.println("NEW_PASSWORD_ADDED:" + newPassword);
          
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("New Pass Added!");
          delay(500); // 딜레이 시간 단축
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("Ready...");
        }
      }
    } else if (received.startsWith("EXPIRE_PASSWORD:")) {
      String expiredPassword = received.substring(16);
      for (int i = 0; i < tempPasswordCount; i++) {
        if (tempPasswords[i] == expiredPassword) {
          for (int j = i; j < tempPasswordCount - 1; j++) {
            tempPasswords[j] = tempPasswords[j + 1];
          }
          tempPasswordCount--;
          Serial.println("PASSWORD_EXPIRED:" + expiredPassword);
          break;
        }
      }
    } else if (received.startsWith("NFC_RESULT:")) {
      String result = received.substring(11);
      lcd.clear();
      lcd.setCursor(0, 0);
      if (result == "SUCCESS") {
        lcd.print("Access Granted!");
        lcd.setCursor(0, 1);
        lcd.print("Via NFC");
        blinkLED(2);
      } else {
        lcd.print("Access Denied!");
        lcd.setCursor(0, 1);
        lcd.print("Invalid NFC");
        blinkLED(1);
      }
      delay(1000); // 딜레이 시간 단축
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Ready...");
    }
  }
}

void loop() {
  handleSerialCommands();
  
  // 키패드 처리
  char key = keypad.getKey();
  if (key) {
    if (key == 'D') {
      handleKeypadPassword(inputPassword);
      inputPassword = "";
    } else if (key == 'C') {
      inputPassword = "";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Input Cleared");
      delay(200); // 딜레이 시간 단축
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Ready...");
    } else if (key != 'A' && key != 'B' && key != '#' && key != '*') {
      inputPassword += key;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Input: ");
      lcd.print(inputPassword);
    }
  }

  // NFC 체크 (non-blocking)
  if (nfcAvailable) {
    checkNFCPassword();
  }
}

void blinkLED(int times) {
  for(int i = 0; i < times; i++) {
    digitalWrite(LED_PIN, HIGH);
    delay(200);
    digitalWrite(LED_PIN, LOW);
    delay(200);
  }
}